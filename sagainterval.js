// Generated by CoffeeScript 1.9.2
var chrono, loghelper, moment, spanner;

moment = require('moment-timezone');

spanner = require('timespanner');

chrono = require('chronological');

moment = chrono(spanner(moment));

loghelper = require('./loghelper');

module.exports = function(logwatcher, options) {
  var handle, intervalsforsagas, oninterval;
  intervalsforsagas = {};
  oninterval = options.oninterval;
  if (oninterval == null) {
    oninterval = function() {};
  }
  handle = logwatcher.onlog(function(url, instance) {
    var _, interval, intervals, intervalsforsaga, key, ref, ref1, ref2, results;
    if (intervalsforsagas[url] == null) {
      intervalsforsagas[url] = {};
    }
    intervalsforsaga = intervalsforsagas[url];
    if (intervalsforsaga[instance.key] == null) {
      intervalsforsaga[instance.key] = {};
    }
    intervals = intervalsforsaga[instance.key];
    ref = instance.interpreted.clearedintervals;
    for (key in ref) {
      _ = ref[key];
      if (intervals[key] == null) {
        continue;
      }
      intervals[key].cancel();
      delete intervals[key];
    }
    ref1 = instance.interpreted.handledintervals;
    for (key in ref1) {
      _ = ref1[key];
      if (intervals[key] == null) {
        continue;
      }
      intervals[key].cancel();
      delete intervals[key];
    }
    ref2 = instance.interpreted.intervals;
    results = [];
    for (key in ref2) {
      interval = ref2[key];
      if (intervals[key] != null) {
        intervals[key].end();
        delete intervals[key];
      }
      results.push((function(key, interval) {
        var start, timer;
        start = interval.start;
        if (start != null) {
          start++;
        }
        timer = moment.utc(interval.anchor, 'YYYY-MM-DD[T]HH:mm:ssZ').every(interval.count, interval.unit);
        return intervals[key] = timer.timer(start, function(count, value) {
          return oninterval(url, instance.key, key, count, value);
        });
      })(key, interval));
    }
    return results;
  });
  return {
    destroy: function() {
      var _, interval, intervals, intervalsforsaga;
      handle.off();
      for (_ in intervalsforsagas) {
        intervalsforsaga = intervalsforsagas[_];
        for (_ in intervalsforsaga) {
          intervals = intervalsforsaga[_];
          for (_ in intervals) {
            interval = intervals[_];
            interval.end();
          }
        }
      }
      return intervalsforsagas = {};
    }
  };
};
