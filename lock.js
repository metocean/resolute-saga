// Generated by CoffeeScript 1.9.2
var consul, iso8601, moment, os;

consul = require('consul-utils');

os = require('os');

moment = require('moment-timezone');

iso8601 = require('./iso8601');

module.exports = function(httpAddr) {
  var _fin, locks, session;
  _fin = false;
  locks = {};
  session = consul.TTLSession(httpAddr);
  session.run({
    ondown: function() {
      return locks = {};
    }
  });
  return {
    acquire: function(url, key, cb) {
      var lock, prefix;
      prefix = "" + url + key;
      if (!session.isvalid() || (locks[prefix] != null)) {
        if (cb != null) {
          cb(false);
        }
        return;
      }
      lock = consul.Lock(httpAddr, prefix);
      locks[prefix] = {
        url: url,
        key: key,
        lock: lock
      };
      return lock.acquire(session.id(), "Locked by " + (os.hostname()) + " process " + process.pid + " @ " + (moment.utc().format(iso8601)), function(success) {
        if (!success) {
          delete locks[prefix];
        }
        if (cb != null) {
          return cb(success);
        }
      });
    },
    release: function(url, key, cb) {
      var prefix;
      prefix = "" + url + key;
      if (!session.isvalid() || (locks[prefix] == null)) {
        if (cb != null) {
          cb(true);
        }
        return;
      }
      return locks[prefix].lock.release(session.id(), "Unlocked by " + (os.hostname()) + " process " + process.pid + " @ " + (moment.utc().format(iso8601)), function(success) {
        delete locks[prefix];
        if (cb != null) {
          return cb(success);
        }
      });
    },
    destroy: function(cb) {
      if (_fin) {
        return;
      }
      _fin = true;
      return session.destroy(cb);
    }
  };
};
