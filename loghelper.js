// Generated by CoffeeScript 1.9.2
var result;

module.exports = result = {
  blanklog: function() {
    return [];
  },
  blankinterpretedlog: function() {
    return {
      handledmessages: {},
      timeouts: {},
      handledtimeouts: {},
      clearedtimeouts: {},
      intervals: {},
      handledintervals: {},
      clearedintervals: {},
      other: []
    };
  },
  parse: function(value) {
    return value.split('\n').filter(function(a) {
      return a !== '';
    }).map(function(a) {
      return JSON.parse(a);
    });
  },
  stringify: function(log) {
    return log.map(function(a) {
      return JSON.stringify(a);
    }).join('\n');
  },
  interpret: function(log) {
    var i, item, len, res;
    res = result.blankinterpretedlog();
    for (i = 0, len = log.length; i < len; i++) {
      item = log[i];
      switch (item.type) {
        case 'handledmessage':
          res.handledmessages[item.id] = true;
          break;
        case 'settimeout':
          res.timeouts[item.id] = item.timeout;
          break;
        case 'handledtimeout':
          delete res.timeouts[item.id];
          res.handledtimeouts[item.id] = true;
          break;
        case 'cleartimeout':
          delete res.timeouts[item.id];
          res.clearedtimeouts[item.id] = true;
          break;
        case 'setinterval':
          res.timeouts[item.id] = {
            anchor: item.anchor,
            count: item.count,
            unit: item.unit
          };
          break;
        case 'handledinterval':
          delete res.intervals[item.id];
          res.handledintervals[item.id] = item.interval;
          break;
        case 'clearinterval':
          delete res.intervals[item.id];
          res.clearedintervals[item.id] = true;
          break;
        default:
          res.other.push(item);
      }
    }
    return res;
  }
};
