// Generated by CoffeeScript 1.9.2
var consul, loghelper;

consul = require('consul-utils');

loghelper = require('./loghelper');

module.exports = function(httpAddr) {
  var makewatch, res, sagas;
  sagas = {};
  makewatch = function(url) {
    return new consul.KV(httpAddr, url, {
      recurse: true
    }, function(keys) {
      var i, instance, key, len, log, results;
      keys = keys.filter(function(k) {
        return k.Key !== url;
      }).map(function(d) {
        d.Key = d.Key.substr(url.length);
        if (d.Value == null) {
          d.Value = '';
        }
        return d;
      });
      results = [];
      for (i = 0, len = keys.length; i < len; i++) {
        key = keys[i];
        log = loghelper.parse(key.Value);
        instance = {
          key: key.Key,
          log: log,
          isavailable: key.Session == null
        };
        sagas[url].log[key.Key] = instance;
        results.push(sagas[url].onlog(instance));
      }
      return results;
    });
  };
  return res = {
    watch: function(url, options) {
      var onlog;
      if (sagas[url] != null) {
        return;
      }
      if (options == null) {
        options = {};
      }
      onlog = options.onlog;
      if (onlog == null) {
        onlog = function() {};
      }
      sagas[url] = {
        url: url,
        onlog: onlog,
        log: {},
        available: []
      };
      return sagas[url].watch = makewatch(url, options);
    },
    unwatch: function(url) {
      if (sagas[url] == null) {
        return;
      }
      sagas[url].watch.end();
      return delete sagas[url];
    },
    getinstance: function(url, key) {
      if (sagas[url] == null) {
        return null;
      }
      return sagas[url].log[key];
    },
    destroy: function(cb) {
      var _, url;
      for (url in sagas) {
        _ = sagas[url];
        res.unwatch(url);
      }
      if (cb != null) {
        return cb();
      }
    }
  };
};
